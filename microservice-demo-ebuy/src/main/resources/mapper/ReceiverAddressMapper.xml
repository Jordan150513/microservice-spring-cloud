<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiaodan.DAO.ReceiverAddressMapper">
  <resultMap id="BaseResultMap" type="com.qiaodan.model.ReceiverAddress">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="receiverName" jdbcType="VARCHAR" property="receivername" />
    <result column="receiverAddress" jdbcType="VARCHAR" property="receiveraddress" />
    <result column="receiverPhone" jdbcType="DECIMAL" property="receiverphone" />
    <result column="isDefault" jdbcType="BIT" property="isdefault" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, receiverName, receiverAddress, receiverPhone, isDefault
  </sql>
  <select id="selectByExample" parameterType="com.qiaodan.model.ReceiverAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receiveraddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from receiveraddress
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from receiveraddress
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qiaodan.model.ReceiverAddressExample">
    delete from receiveraddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qiaodan.model.ReceiverAddress">
    insert into receiveraddress (id, userId, receiverName, 
      receiverAddress, receiverPhone, isDefault
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{receivername,jdbcType=VARCHAR}, 
      #{receiveraddress,jdbcType=VARCHAR}, #{receiverphone,jdbcType=DECIMAL}, #{isdefault,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qiaodan.model.ReceiverAddress">
    insert into receiveraddress
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="receivername != null">
        receiverName,
      </if>
      <if test="receiveraddress != null">
        receiverAddress,
      </if>
      <if test="receiverphone != null">
        receiverPhone,
      </if>
      <if test="isdefault != null">
        isDefault,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="receivername != null">
        #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null">
        #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null">
        #{receiverphone,jdbcType=DECIMAL},
      </if>
      <if test="isdefault != null">
        #{isdefault,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qiaodan.model.ReceiverAddressExample" resultType="java.lang.Long">
    select count(*) from receiveraddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update receiveraddress
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.receivername != null">
        receiverName = #{record.receivername,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveraddress != null">
        receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverphone != null">
        receiverPhone = #{record.receiverphone,jdbcType=DECIMAL},
      </if>
      <if test="record.isdefault != null">
        isDefault = #{record.isdefault,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update receiveraddress
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      receiverName = #{record.receivername,jdbcType=VARCHAR},
      receiverAddress = #{record.receiveraddress,jdbcType=VARCHAR},
      receiverPhone = #{record.receiverphone,jdbcType=DECIMAL},
      isDefault = #{record.isdefault,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiaodan.model.ReceiverAddress">
    update receiveraddress
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="receivername != null">
        receiverName = #{receivername,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null">
        receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null">
        receiverPhone = #{receiverphone,jdbcType=DECIMAL},
      </if>
      <if test="isdefault != null">
        isDefault = #{isdefault,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiaodan.model.ReceiverAddress">
    update receiveraddress
    set userId = #{userid,jdbcType=INTEGER},
      receiverName = #{receivername,jdbcType=VARCHAR},
      receiverAddress = #{receiveraddress,jdbcType=VARCHAR},
      receiverPhone = #{receiverphone,jdbcType=DECIMAL},
      isDefault = #{isdefault,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>